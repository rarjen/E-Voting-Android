// Generated by view binder compiler. Do not edit!
package com.example.evoting.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.evoting.R;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import com.google.android.material.textview.MaterialTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityRegisterBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button buttonRegister;

  @NonNull
  public final TextInputEditText etEmail;

  @NonNull
  public final TextInputEditText etNIK;

  @NonNull
  public final TextInputEditText etNama;

  @NonNull
  public final TextInputEditText etPassword;

  @NonNull
  public final ImageView ivBack;

  @NonNull
  public final TextInputLayout layInputNama;

  @NonNull
  public final MaterialTextView notHave;

  @NonNull
  public final TextInputLayout repeatPassword;

  @NonNull
  public final MaterialTextView tvLoginHere;

  @NonNull
  public final TextView tvUbahPassword;

  @NonNull
  public final TextInputLayout txtInputEmail;

  @NonNull
  public final TextInputLayout txtInputNotelp;

  private ActivityRegisterBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button buttonRegister, @NonNull TextInputEditText etEmail,
      @NonNull TextInputEditText etNIK, @NonNull TextInputEditText etNama,
      @NonNull TextInputEditText etPassword, @NonNull ImageView ivBack,
      @NonNull TextInputLayout layInputNama, @NonNull MaterialTextView notHave,
      @NonNull TextInputLayout repeatPassword, @NonNull MaterialTextView tvLoginHere,
      @NonNull TextView tvUbahPassword, @NonNull TextInputLayout txtInputEmail,
      @NonNull TextInputLayout txtInputNotelp) {
    this.rootView = rootView;
    this.buttonRegister = buttonRegister;
    this.etEmail = etEmail;
    this.etNIK = etNIK;
    this.etNama = etNama;
    this.etPassword = etPassword;
    this.ivBack = ivBack;
    this.layInputNama = layInputNama;
    this.notHave = notHave;
    this.repeatPassword = repeatPassword;
    this.tvLoginHere = tvLoginHere;
    this.tvUbahPassword = tvUbahPassword;
    this.txtInputEmail = txtInputEmail;
    this.txtInputNotelp = txtInputNotelp;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityRegisterBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityRegisterBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_register, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityRegisterBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonRegister;
      Button buttonRegister = ViewBindings.findChildViewById(rootView, id);
      if (buttonRegister == null) {
        break missingId;
      }

      id = R.id.etEmail;
      TextInputEditText etEmail = ViewBindings.findChildViewById(rootView, id);
      if (etEmail == null) {
        break missingId;
      }

      id = R.id.etNIK;
      TextInputEditText etNIK = ViewBindings.findChildViewById(rootView, id);
      if (etNIK == null) {
        break missingId;
      }

      id = R.id.et_nama;
      TextInputEditText etNama = ViewBindings.findChildViewById(rootView, id);
      if (etNama == null) {
        break missingId;
      }

      id = R.id.et_password;
      TextInputEditText etPassword = ViewBindings.findChildViewById(rootView, id);
      if (etPassword == null) {
        break missingId;
      }

      id = R.id.ivBack;
      ImageView ivBack = ViewBindings.findChildViewById(rootView, id);
      if (ivBack == null) {
        break missingId;
      }

      id = R.id.lay_InputNama;
      TextInputLayout layInputNama = ViewBindings.findChildViewById(rootView, id);
      if (layInputNama == null) {
        break missingId;
      }

      id = R.id.not_have;
      MaterialTextView notHave = ViewBindings.findChildViewById(rootView, id);
      if (notHave == null) {
        break missingId;
      }

      id = R.id.repeatPassword;
      TextInputLayout repeatPassword = ViewBindings.findChildViewById(rootView, id);
      if (repeatPassword == null) {
        break missingId;
      }

      id = R.id.tv_login_here;
      MaterialTextView tvLoginHere = ViewBindings.findChildViewById(rootView, id);
      if (tvLoginHere == null) {
        break missingId;
      }

      id = R.id.tvUbahPassword;
      TextView tvUbahPassword = ViewBindings.findChildViewById(rootView, id);
      if (tvUbahPassword == null) {
        break missingId;
      }

      id = R.id.txt_inputEmail;
      TextInputLayout txtInputEmail = ViewBindings.findChildViewById(rootView, id);
      if (txtInputEmail == null) {
        break missingId;
      }

      id = R.id.txt_inputNotelp;
      TextInputLayout txtInputNotelp = ViewBindings.findChildViewById(rootView, id);
      if (txtInputNotelp == null) {
        break missingId;
      }

      return new ActivityRegisterBinding((ConstraintLayout) rootView, buttonRegister, etEmail,
          etNIK, etNama, etPassword, ivBack, layInputNama, notHave, repeatPassword, tvLoginHere,
          tvUbahPassword, txtInputEmail, txtInputNotelp);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
